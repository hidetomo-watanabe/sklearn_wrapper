{
    "data": {
        "train_path": "/path/train.csv",
        "test_path": "/path/test.csv",
        "output_dir": "/path/outputs",
        "type": "table",
        "pred_cols": ["Hoge"],
        "id_col": "Id",
        "delimiter": ","
    },
    "pre": {
        "train_mode": "clf",
        "y_pre": false,
        "savename": "tmp_file",
        "table": {
            "adhoc_df": {
                "myfunc": "hoge",
                "methods": [
                    "translate_hoge",
                    "translate_fuga"
                ]
            },
            "deletion": [
                "Hoge",
                "Foo"
            ],
            "category_encoding": {
                "default": {
                    "model": "onehot"
                },
                "options": [
                    {
                        "columns": [
                            "Hoge",
                            "Fuga"
                        ],
                        "model": "target"
                    }
                ]
            },
            "adhoc_ndarray": {
                "myfunc": "hoge",
                "methods": [
                    "translate_hoge",
                    "translate_fuga"
                ]
            },
            "feature_selection": {
                "n": 10,
                "model": "boruta"
            },
            "ks_validation": true,
            "adversarial_validation": {
                "model_config": {
                    "model": "rf_clf",
                    "cv_select": "train_all",
                    "n_trials": 3,
                    "fit_params": {
                    },
                    "params": {
                        "n_estimators": [3, 5, 10],
                        "max_depth": [3, 5, 10]
                    }
                },
                "threshold": 0.5,
                "add_column": false
            },
            "no_anomaly_validation": {
                "contamination": "auto",
                "add_column": false
            },
            "reshape_for_keras": "lstm",
            "sparse": true
        },
        "image": {
            "train_img_dir": "/path",
            "test_img_dir": "/path",
            "img_path_col": "img_path_col",
            "img_extension": ".jpg",
            "resize": {
                "x": 32,
                "y": 32
            }
        }
    },
    "fit": {
        "myfunc": "hoge",
        "train_mode": "clf",
        "scoring": "accuracy",
        "cv": {
            "fold": "stratifiedk",
            "num": 3
        },
        "modelname": "tmp_model",
        "ensemble_model_config": {
            "mode": "stacking",
            "model": "log_reg",
            "k": 10,
            "proportion": 0.2
        },
        "single_model_configs": [
            {
                "model": "log_reg",
                "missing_imputation": "mean",
                "x_scaler": "standard",
                "cv_select": "train_all",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "C": {"type": "float", "from": 0.001, "to": 0.1},
                    "class_weight": ["balanced"],
                    "max_iter": {"type": "int", "from": 100, "to": 10000},
                    "solver": ["sag", "liblinear"],
                    "random_state": [42],
                    "n_jobs": [-1]
                }
            },
            {
                "model": "gbdt_clf",
                "undersampling": "bagging",
                "multiclass": "onevsrest",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_depth": [4, 6, 8, 10],
                    "learning_rate": [0.1],
                    "n_estimators": [1000],
                    "random_state": [42]
                },
                "pseudo_labeling": {
                    "threshold": 0.8
                },
                "error_sampling": true
            },
            {
                "model": "xgb_clf",
                "multiclass": "onevsrest",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_depth": [7, 10, 30, 50],
                    "learning_rate": [0.1],
                    "n_estimators": [1000],
                    "reg_alpha": [0, 5, 15, 300],
                    "reg_lambda": [0, 5, 15, 300],
                    "random_state": [42]
                }
            },
            {
                "model": "lgb_clf",
                "dimension_reduction": {
                    "n": 250,
                    "model": "pca"
                },
                "multiclass": false,
                "n_trials": 1,
                "fit_params": {
                    "eval_metric": "auc",
                    "early_stopping_rounds": 100
                },
                "params": {
                    "n_estimators": [1000],
                    "learning_rate": [0.1],
                    "max_depth": [7, 10, 30, 50],
                    "min_data_in_leaf": [10, 20, 30, 50, 100, 500, 1000],
                    "num_leaves": [10, 31, 50, 70, 80],
                    "feature_fraction": [0.01, 0.1, 1.0],
                    "lambda_l1": [0, 5, 15, 300],
                    "lambda_l2": [0, 5, 15, 300],
                    "seed": [42],
                    "n_jobs": [-1]
                }
            },
            {
                "model": "catb_clf",
                "multiclass": false,
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "depth": [7, 10, 30, 50],
                    "learning_rate": [0.1],
                    "iterations": [1000],
                    "max_leaves": [10, 31, 50, 70, 80],
                    "l2_leaf_reg": [0, 5, 15, 300],
                    "early_stopping_rounds": [100],
                    "random_state": [42]
                }
            },
            {
                "model": "svc",
                "multiclass": "onevsone",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "probability": [true],
                    "C": [1, 2, 3, 4, 5],
                    "degree": [1, 2, 3, 4, 5],
                    "kernel": ["rbf", "linear", "poly", "sigmoid"],
                    "gamma": ["auto"]
                }
            },
            {
                "model": "keras_clf",
                "augmentation": {
                    "conf": {
                        "rotation_range": 20,
                        "channel_shift_range": true,
                        "horizontal_flip": true,
                        "vertical_flip": true
                    },
                    "batch_size": 24
                },
                "n_trials": 1,
                "fit_params": {
                    "epochs": 3,
                    "reduce_lr": {
                        "monitor": "loss",
                        "patience": 1,
                        "verbose": 1
                    },
                    "early_stopping": {
                        "monitor": "loss",
                        "patience": 1,
                        "verbose": 1
                    }
                },
                "params": {
                }
            },
            {
                "model": "torch_clf",
                "oversampling": "smote",
                "n_trials": 1,
                "fit_params": {
                },
                "params": {
                    "max_epochs": [3],
                    "batch_size": [50]
                }
            },
            {
                "model": "tabnet_clf",
                "n_trials": 1,
                "fit_params": {
                    "eval_metric": ["auc"],
                },
                "params": {
                }
            }
        ],
        "permutation": false
    },
    "post": {
        "myfunc": "hoge",
        "methods": [
            "add_hoge",
            "add_fuga"
        ]
    },
    "notify": {
        "mode": "slack",
        "slack": "https://hooks.slack.com/services/hogehoge"
    }
}
